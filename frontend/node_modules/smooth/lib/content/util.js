"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFragment = getFragment;
exports.getFragmentDefinition = getFragmentDefinition;
exports.getDefinitionType = getDefinitionType;
exports.getDefinitionName = getDefinitionName;
exports.getComponent = getComponent;
exports.getFragmentString = getFragmentString;

function fileError(message, filePath) {
  return new Error(`${message} found in "${filePath}"`);
}

function getFragment(mod, name, filePath) {
  const fragment = mod[name];

  if (!fragment) {
    throw fileError(`No export "${name}"`, filePath);
  }

  return fragment;
}

function getFragmentDefinition(docNode, filePath) {
  const definition = docNode.definitions.find(node => node.kind === 'FragmentDefinition' && node.typeCondition.kind === 'NamedType');

  if (!definition) {
    throw fileError(`No matching fragment definition`, filePath);
  }

  return definition;
}

function getDefinitionType(fragmentDefinition) {
  return fragmentDefinition.typeCondition.name.value;
}

function getDefinitionName(fragmentDefinition) {
  return fragmentDefinition.name.value;
}

function getComponent(mod, filePath) {
  const component = mod.default;

  if (!component) {
    throw fileError(`No default export`, filePath);
  }

  return component;
}

function getFragmentString(fragment) {
  return fragment.loc.source.body;
}