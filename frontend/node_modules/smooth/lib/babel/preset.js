"use strict";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const common = {
  presets: ['@babel/preset-react'],
  plugins: ['@loadable/babel-plugin', '@babel/plugin-proposal-class-properties']
};

const nodeConfig = opts => _extends({}, common, {
  presets: [...common.presets, ['@babel/preset-env', _extends({
    loose: true,
    useBuiltIns: 'entry',
    corejs: 3,
    targets: {
      node: 'current'
    }
  }, opts['preset-env'])]]
});

const webConfig = opts => _extends({}, common, {
  presets: [...common.presets, ['@babel/preset-env', _extends({
    modules: false,
    loose: true,
    useBuiltIns: 'entry',
    corejs: 3
  }, opts['preset-env'])]],
  plugins: [...common.plugins, ['@babel/plugin-transform-runtime', opts['transform-runtime']]]
});

function isWebTarget(caller) {
  return Boolean(caller && caller.name === 'babel-loader');
}

module.exports = (api, opts = {}) => {
  if (api.caller(isWebTarget)) {
    return webConfig(opts);
  }

  return nodeConfig(opts);
};