"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getContext = getContext;
exports.createApolloClient = createApolloClient;

var _apolloClient = require("apollo-client");

var _apolloLink = require("apollo-link");

var _apolloLinkSchema = require("apollo-link-schema");

var _apolloCacheInmemory = require("apollo-cache-inmemory");

var _validate = require("./links/validate");

var _api = require("../api");

function getContext({
  req,
  config,
  operationContext
}) {
  const headers = operationContext ? operationContext.headers : req.headers;
  const lang = headers['x-smooth-lang'] || null;
  const preview = Boolean(headers['x-smooth-preview']);
  const id = headers['x-smooth-preview-id'] || null;
  return {
    api: (0, _api.createAPIClient)({
      config,
      lang
    }),
    lang,
    id,
    preview,
    cookie: req.headers.cookie
  };
}

function createApolloClient({
  schema,
  context,
  fragmentTypes
}) {
  return new _apolloClient.ApolloClient({
    ssrMode: true,
    link: _apolloLink.ApolloLink.from([new _validate.ValidateLink({
      schema
    }), new _apolloLinkSchema.SchemaLink({
      schema,
      context
    })]),
    cache: new _apolloCacheInmemory.InMemoryCache({
      fragmentMatcher: new _apolloCacheInmemory.IntrospectionFragmentMatcher({
        introspectionQueryResultData: fragmentTypes
      })
    })
  });
}