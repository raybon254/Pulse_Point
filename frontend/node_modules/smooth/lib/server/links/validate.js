"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ValidateLink = void 0;

var _apolloLink = require("apollo-link");

var _validation = require("graphql/validation");

class ValidateLink extends _apolloLink.ApolloLink {
  constructor({
    schema
  }) {
    super();
    this.schema = schema;
  }

  request(operation, forward) {
    return new _apolloLink.Observable(observer => {
      let subscription;
      Promise.resolve((0, _validation.validate)(this.schema, operation.query)).then(graphQLErrors => {
        if (graphQLErrors.length) {
          const error = new Error('Validation error');
          error.errors = graphQLErrors;
          throw error;
        } else {
          subscription = forward(operation).subscribe({
            next: observer.next.bind(observer),
            error: observer.error.bind(observer),
            complete: observer.complete.bind(observer)
          });
        }
      }).catch(error => {
        observer.error(error);
      });
      return () => {
        if (subscription) {
          subscription.unsubscribe();
        }
      };
    });
  }

}

exports.ValidateLink = ValidateLink;